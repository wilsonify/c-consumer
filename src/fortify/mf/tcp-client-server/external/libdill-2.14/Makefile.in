# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Copyright (c) 2016 Martin Sustrik  All rights reserved.
# Copyright (c) 2013 Luca Barbato
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@DILL_SOCKETS_TRUE@am__append_1 = \
@DILL_SOCKETS_TRUE@    bsock.c \
@DILL_SOCKETS_TRUE@    fd.h \
@DILL_SOCKETS_TRUE@    fd.c \
@DILL_SOCKETS_TRUE@    happyeyeballs.c \
@DILL_SOCKETS_TRUE@    http.c \
@DILL_SOCKETS_TRUE@    iol.h \
@DILL_SOCKETS_TRUE@    iol.c \
@DILL_SOCKETS_TRUE@    ipc.c \
@DILL_SOCKETS_TRUE@    ipaddr.c \
@DILL_SOCKETS_TRUE@    msock.c \
@DILL_SOCKETS_TRUE@    prefix.c \
@DILL_SOCKETS_TRUE@    socks5.c \
@DILL_SOCKETS_TRUE@    suffix.c \
@DILL_SOCKETS_TRUE@    tcp.c \
@DILL_SOCKETS_TRUE@    term.c \
@DILL_SOCKETS_TRUE@    udp.c \
@DILL_SOCKETS_TRUE@    ws.c \
@DILL_SOCKETS_TRUE@    dns/dns.h \
@DILL_SOCKETS_TRUE@    dns/dns.c

@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@am__append_2 = \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tls.c

check_PROGRAMS = tests/example$(EXEEXT) tests/go1$(EXEEXT) \
	tests/go2$(EXEEXT) tests/go3$(EXEEXT) tests/go4$(EXEEXT) \
	tests/go5$(EXEEXT) tests/fd$(EXEEXT) tests/handle$(EXEEXT) \
	tests/chan$(EXEEXT) tests/choose$(EXEEXT) tests/sleep$(EXEEXT) \
	tests/signals$(EXEEXT) tests/overload$(EXEEXT) \
	tests/rbtree$(EXEEXT) tests/bundle$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3)
@DILL_THREADS_TRUE@am__append_3 = \
@DILL_THREADS_TRUE@    tests/threads \
@DILL_THREADS_TRUE@    tests/threads2

@DILL_SOCKETS_TRUE@am__append_4 = \
@DILL_SOCKETS_TRUE@    tests/ipaddr \
@DILL_SOCKETS_TRUE@    tests/iol \
@DILL_SOCKETS_TRUE@    tests/tcp \
@DILL_SOCKETS_TRUE@    tests/ipc \
@DILL_SOCKETS_TRUE@    tests/prefix \
@DILL_SOCKETS_TRUE@    tests/socks5 \
@DILL_SOCKETS_TRUE@    tests/suffix \
@DILL_SOCKETS_TRUE@    tests/udp \
@DILL_SOCKETS_TRUE@    tests/http \
@DILL_SOCKETS_TRUE@    tests/ws \
@DILL_SOCKETS_TRUE@    tests/term \
@DILL_SOCKETS_TRUE@    tests/happyeyeballs

@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@am__append_5 = \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tests/tls

noinst_PROGRAMS = $(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	perf/go$(EXEEXT) perf/ctxswitch$(EXEEXT) perf/chan$(EXEEXT) \
	perf/choose$(EXEEXT) perf/done$(EXEEXT) perf/whispers$(EXEEXT) \
	perf/timer$(EXEEXT)
@DILL_SOCKETS_TRUE@am__append_6 = \
@DILL_SOCKETS_TRUE@    tutorial/basics/step1 \
@DILL_SOCKETS_TRUE@    tutorial/basics/step2 \
@DILL_SOCKETS_TRUE@    tutorial/basics/step3 \
@DILL_SOCKETS_TRUE@    tutorial/basics/step4 \
@DILL_SOCKETS_TRUE@    tutorial/basics/step5 \
@DILL_SOCKETS_TRUE@    tutorial/basics/step6 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step1 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step2 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step3 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step4 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step5 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step6 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step7 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step8 \
@DILL_SOCKETS_TRUE@    tutorial/protocol/step9

@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@am__append_7 = \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tutorial/sockets/step1 \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tutorial/sockets/step2 \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tutorial/sockets/step3 \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tutorial/sockets/step4 \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@    tutorial/sockets/step5


################################################################################
#  examples                                                                    #
################################################################################
@DILL_SOCKETS_TRUE@am__append_8 = \
@DILL_SOCKETS_TRUE@    examples/socks5proxy \
@DILL_SOCKETS_TRUE@    examples/webapp

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(check_HEADERS) $(dillinclude_HEADERS) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = libdill.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(dillincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libdill_la_LIBADD =
am__libdill_la_SOURCES_DIST = chan.c cr.h cr.c epoll.h.inc epoll.c.inc \
	handle.h handle.c kqueue.h.inc kqueue.c.inc libdill.c list.h \
	now.h now.c poll.h.inc poll.c.inc pollset.h pollset.c qlist.h \
	rbtree.h rbtree.c slist.h stack.h stack.c ctx.h ctx.c utils.h \
	utils.c bsock.c fd.h fd.c happyeyeballs.c http.c iol.h iol.c \
	ipc.c ipaddr.c msock.c prefix.c socks5.c suffix.c tcp.c term.c \
	udp.c ws.c dns/dns.h dns/dns.c tls.c
am__dirstamp = $(am__leading_dot)dirstamp
@DILL_SOCKETS_TRUE@am__objects_1 = libdill_la-bsock.lo \
@DILL_SOCKETS_TRUE@	libdill_la-fd.lo \
@DILL_SOCKETS_TRUE@	libdill_la-happyeyeballs.lo \
@DILL_SOCKETS_TRUE@	libdill_la-http.lo libdill_la-iol.lo \
@DILL_SOCKETS_TRUE@	libdill_la-ipc.lo libdill_la-ipaddr.lo \
@DILL_SOCKETS_TRUE@	libdill_la-msock.lo libdill_la-prefix.lo \
@DILL_SOCKETS_TRUE@	libdill_la-socks5.lo libdill_la-suffix.lo \
@DILL_SOCKETS_TRUE@	libdill_la-tcp.lo libdill_la-term.lo \
@DILL_SOCKETS_TRUE@	libdill_la-udp.lo libdill_la-ws.lo \
@DILL_SOCKETS_TRUE@	dns/libdill_la-dns.lo
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@am__objects_2 = libdill_la-tls.lo
am_libdill_la_OBJECTS = libdill_la-chan.lo libdill_la-cr.lo \
	libdill_la-handle.lo libdill_la-libdill.lo libdill_la-now.lo \
	libdill_la-pollset.lo libdill_la-rbtree.lo libdill_la-stack.lo \
	libdill_la-ctx.lo libdill_la-utils.lo $(am__objects_1) \
	$(am__objects_2)
libdill_la_OBJECTS = $(am_libdill_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libdill_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libdill_la_CFLAGS) \
	$(CFLAGS) $(libdill_la_LDFLAGS) $(LDFLAGS) -o $@
@DILL_THREADS_TRUE@am__EXEEXT_1 = tests/threads$(EXEEXT) \
@DILL_THREADS_TRUE@	tests/threads2$(EXEEXT)
@DILL_SOCKETS_TRUE@am__EXEEXT_2 = tests/ipaddr$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tests/iol$(EXEEXT) tests/tcp$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tests/ipc$(EXEEXT) tests/prefix$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tests/socks5$(EXEEXT) tests/suffix$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tests/udp$(EXEEXT) tests/http$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tests/ws$(EXEEXT) tests/term$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tests/happyeyeballs$(EXEEXT)
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@am__EXEEXT_3 = tests/tls$(EXEEXT)
@DILL_SOCKETS_TRUE@am__EXEEXT_4 = tutorial/basics/step1$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/basics/step2$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/basics/step3$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/basics/step4$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/basics/step5$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/basics/step6$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step1$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step2$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step3$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step4$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step5$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step6$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step7$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step8$(EXEEXT) \
@DILL_SOCKETS_TRUE@	tutorial/protocol/step9$(EXEEXT)
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@am__EXEEXT_5 = tutorial/sockets/step1$(EXEEXT) \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@	tutorial/sockets/step2$(EXEEXT) \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@	tutorial/sockets/step3$(EXEEXT) \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@	tutorial/sockets/step4$(EXEEXT) \
@DILL_SOCKETS_TRUE@@HAVE_TLS_TRUE@	tutorial/sockets/step5$(EXEEXT)
@DILL_SOCKETS_TRUE@am__EXEEXT_6 = examples/socks5proxy$(EXEEXT) \
@DILL_SOCKETS_TRUE@	examples/webapp$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
examples_socks5proxy_SOURCES = examples/socks5proxy.c
examples_socks5proxy_OBJECTS = examples/socks5proxy.$(OBJEXT)
examples_socks5proxy_LDADD = $(LDADD)
examples_socks5proxy_DEPENDENCIES = libdill.la
examples_webapp_SOURCES = examples/webapp.c
examples_webapp_OBJECTS = examples/webapp.$(OBJEXT)
examples_webapp_LDADD = $(LDADD)
examples_webapp_DEPENDENCIES = libdill.la
perf_chan_SOURCES = perf/chan.c
perf_chan_OBJECTS = perf/chan.$(OBJEXT)
perf_chan_LDADD = $(LDADD)
perf_chan_DEPENDENCIES = libdill.la
perf_choose_SOURCES = perf/choose.c
perf_choose_OBJECTS = perf/choose.$(OBJEXT)
perf_choose_LDADD = $(LDADD)
perf_choose_DEPENDENCIES = libdill.la
perf_ctxswitch_SOURCES = perf/ctxswitch.c
perf_ctxswitch_OBJECTS = perf/ctxswitch.$(OBJEXT)
perf_ctxswitch_LDADD = $(LDADD)
perf_ctxswitch_DEPENDENCIES = libdill.la
perf_done_SOURCES = perf/done.c
perf_done_OBJECTS = perf/done.$(OBJEXT)
perf_done_LDADD = $(LDADD)
perf_done_DEPENDENCIES = libdill.la
perf_go_SOURCES = perf/go.c
perf_go_OBJECTS = perf/go.$(OBJEXT)
perf_go_LDADD = $(LDADD)
perf_go_DEPENDENCIES = libdill.la
perf_timer_SOURCES = perf/timer.c
perf_timer_OBJECTS = perf/timer.$(OBJEXT)
perf_timer_LDADD = $(LDADD)
perf_timer_DEPENDENCIES = libdill.la
perf_whispers_SOURCES = perf/whispers.c
perf_whispers_OBJECTS = perf/whispers.$(OBJEXT)
perf_whispers_LDADD = $(LDADD)
perf_whispers_DEPENDENCIES = libdill.la
tests_bundle_SOURCES = tests/bundle.c
tests_bundle_OBJECTS = tests/bundle.$(OBJEXT)
tests_bundle_LDADD = $(LDADD)
tests_bundle_DEPENDENCIES = libdill.la
tests_chan_SOURCES = tests/chan.c
tests_chan_OBJECTS = tests/chan.$(OBJEXT)
tests_chan_LDADD = $(LDADD)
tests_chan_DEPENDENCIES = libdill.la
tests_choose_SOURCES = tests/choose.c
tests_choose_OBJECTS = tests/choose.$(OBJEXT)
tests_choose_LDADD = $(LDADD)
tests_choose_DEPENDENCIES = libdill.la
tests_example_SOURCES = tests/example.c
tests_example_OBJECTS = tests/example.$(OBJEXT)
tests_example_LDADD = $(LDADD)
tests_example_DEPENDENCIES = libdill.la
tests_fd_SOURCES = tests/fd.c
tests_fd_OBJECTS = tests/fd.$(OBJEXT)
tests_fd_LDADD = $(LDADD)
tests_fd_DEPENDENCIES = libdill.la
tests_go1_SOURCES = tests/go1.c
tests_go1_OBJECTS = tests/go1.$(OBJEXT)
tests_go1_LDADD = $(LDADD)
tests_go1_DEPENDENCIES = libdill.la
tests_go2_SOURCES = tests/go2.c
tests_go2_OBJECTS = tests/go2.$(OBJEXT)
tests_go2_LDADD = $(LDADD)
tests_go2_DEPENDENCIES = libdill.la
tests_go3_SOURCES = tests/go3.c
tests_go3_OBJECTS = tests/go3.$(OBJEXT)
tests_go3_LDADD = $(LDADD)
tests_go3_DEPENDENCIES = libdill.la
tests_go4_SOURCES = tests/go4.c
tests_go4_OBJECTS = tests/go4.$(OBJEXT)
tests_go4_LDADD = $(LDADD)
tests_go4_DEPENDENCIES = libdill.la
tests_go5_SOURCES = tests/go5.c
tests_go5_OBJECTS = tests/go5.$(OBJEXT)
tests_go5_LDADD = $(LDADD)
tests_go5_DEPENDENCIES = libdill.la
tests_handle_SOURCES = tests/handle.c
tests_handle_OBJECTS = tests/handle.$(OBJEXT)
tests_handle_LDADD = $(LDADD)
tests_handle_DEPENDENCIES = libdill.la
tests_happyeyeballs_SOURCES = tests/happyeyeballs.c
tests_happyeyeballs_OBJECTS = tests/happyeyeballs.$(OBJEXT)
tests_happyeyeballs_LDADD = $(LDADD)
tests_happyeyeballs_DEPENDENCIES = libdill.la
tests_http_SOURCES = tests/http.c
tests_http_OBJECTS = tests/http.$(OBJEXT)
tests_http_LDADD = $(LDADD)
tests_http_DEPENDENCIES = libdill.la
tests_iol_SOURCES = tests/iol.c
tests_iol_OBJECTS = tests/iol.$(OBJEXT)
tests_iol_LDADD = $(LDADD)
tests_iol_DEPENDENCIES = libdill.la
tests_ipaddr_SOURCES = tests/ipaddr.c
tests_ipaddr_OBJECTS = tests/ipaddr.$(OBJEXT)
tests_ipaddr_LDADD = $(LDADD)
tests_ipaddr_DEPENDENCIES = libdill.la
tests_ipc_SOURCES = tests/ipc.c
tests_ipc_OBJECTS = tests/ipc.$(OBJEXT)
tests_ipc_LDADD = $(LDADD)
tests_ipc_DEPENDENCIES = libdill.la
tests_overload_SOURCES = tests/overload.c
tests_overload_OBJECTS = tests/overload.$(OBJEXT)
tests_overload_LDADD = $(LDADD)
tests_overload_DEPENDENCIES = libdill.la
tests_prefix_SOURCES = tests/prefix.c
tests_prefix_OBJECTS = tests/prefix.$(OBJEXT)
tests_prefix_LDADD = $(LDADD)
tests_prefix_DEPENDENCIES = libdill.la
tests_rbtree_SOURCES = tests/rbtree.c
tests_rbtree_OBJECTS = tests/rbtree.$(OBJEXT)
tests_rbtree_LDADD = $(LDADD)
tests_rbtree_DEPENDENCIES = libdill.la
tests_signals_SOURCES = tests/signals.c
tests_signals_OBJECTS = tests/signals.$(OBJEXT)
tests_signals_LDADD = $(LDADD)
tests_signals_DEPENDENCIES = libdill.la
tests_sleep_SOURCES = tests/sleep.c
tests_sleep_OBJECTS = tests/sleep.$(OBJEXT)
tests_sleep_LDADD = $(LDADD)
tests_sleep_DEPENDENCIES = libdill.la
tests_socks5_SOURCES = tests/socks5.c
tests_socks5_OBJECTS = tests/socks5.$(OBJEXT)
tests_socks5_LDADD = $(LDADD)
tests_socks5_DEPENDENCIES = libdill.la
tests_suffix_SOURCES = tests/suffix.c
tests_suffix_OBJECTS = tests/suffix.$(OBJEXT)
tests_suffix_LDADD = $(LDADD)
tests_suffix_DEPENDENCIES = libdill.la
tests_tcp_SOURCES = tests/tcp.c
tests_tcp_OBJECTS = tests/tcp.$(OBJEXT)
tests_tcp_LDADD = $(LDADD)
tests_tcp_DEPENDENCIES = libdill.la
tests_term_SOURCES = tests/term.c
tests_term_OBJECTS = tests/term.$(OBJEXT)
tests_term_LDADD = $(LDADD)
tests_term_DEPENDENCIES = libdill.la
tests_threads_SOURCES = tests/threads.c
tests_threads_OBJECTS = tests/threads.$(OBJEXT)
tests_threads_LDADD = $(LDADD)
tests_threads_DEPENDENCIES = libdill.la
tests_threads2_SOURCES = tests/threads2.c
tests_threads2_OBJECTS = tests/threads2.$(OBJEXT)
tests_threads2_LDADD = $(LDADD)
tests_threads2_DEPENDENCIES = libdill.la
tests_tls_SOURCES = tests/tls.c
tests_tls_OBJECTS = tests/tls.$(OBJEXT)
tests_tls_LDADD = $(LDADD)
tests_tls_DEPENDENCIES = libdill.la
tests_udp_SOURCES = tests/udp.c
tests_udp_OBJECTS = tests/udp.$(OBJEXT)
tests_udp_LDADD = $(LDADD)
tests_udp_DEPENDENCIES = libdill.la
tests_ws_SOURCES = tests/ws.c
tests_ws_OBJECTS = tests/ws.$(OBJEXT)
tests_ws_LDADD = $(LDADD)
tests_ws_DEPENDENCIES = libdill.la
tutorial_basics_step1_SOURCES = tutorial/basics/step1.c
tutorial_basics_step1_OBJECTS = tutorial/basics/step1.$(OBJEXT)
tutorial_basics_step1_LDADD = $(LDADD)
tutorial_basics_step1_DEPENDENCIES = libdill.la
tutorial_basics_step2_SOURCES = tutorial/basics/step2.c
tutorial_basics_step2_OBJECTS = tutorial/basics/step2.$(OBJEXT)
tutorial_basics_step2_LDADD = $(LDADD)
tutorial_basics_step2_DEPENDENCIES = libdill.la
tutorial_basics_step3_SOURCES = tutorial/basics/step3.c
tutorial_basics_step3_OBJECTS = tutorial/basics/step3.$(OBJEXT)
tutorial_basics_step3_LDADD = $(LDADD)
tutorial_basics_step3_DEPENDENCIES = libdill.la
tutorial_basics_step4_SOURCES = tutorial/basics/step4.c
tutorial_basics_step4_OBJECTS = tutorial/basics/step4.$(OBJEXT)
tutorial_basics_step4_LDADD = $(LDADD)
tutorial_basics_step4_DEPENDENCIES = libdill.la
tutorial_basics_step5_SOURCES = tutorial/basics/step5.c
tutorial_basics_step5_OBJECTS = tutorial/basics/step5.$(OBJEXT)
tutorial_basics_step5_LDADD = $(LDADD)
tutorial_basics_step5_DEPENDENCIES = libdill.la
tutorial_basics_step6_SOURCES = tutorial/basics/step6.c
tutorial_basics_step6_OBJECTS = tutorial/basics/step6.$(OBJEXT)
tutorial_basics_step6_LDADD = $(LDADD)
tutorial_basics_step6_DEPENDENCIES = libdill.la
tutorial_protocol_step1_SOURCES = tutorial/protocol/step1.c
tutorial_protocol_step1_OBJECTS = tutorial/protocol/step1.$(OBJEXT)
tutorial_protocol_step1_LDADD = $(LDADD)
tutorial_protocol_step1_DEPENDENCIES = libdill.la
tutorial_protocol_step2_SOURCES = tutorial/protocol/step2.c
tutorial_protocol_step2_OBJECTS = tutorial/protocol/step2.$(OBJEXT)
tutorial_protocol_step2_LDADD = $(LDADD)
tutorial_protocol_step2_DEPENDENCIES = libdill.la
tutorial_protocol_step3_SOURCES = tutorial/protocol/step3.c
tutorial_protocol_step3_OBJECTS = tutorial/protocol/step3.$(OBJEXT)
tutorial_protocol_step3_LDADD = $(LDADD)
tutorial_protocol_step3_DEPENDENCIES = libdill.la
tutorial_protocol_step4_SOURCES = tutorial/protocol/step4.c
tutorial_protocol_step4_OBJECTS = tutorial/protocol/step4.$(OBJEXT)
tutorial_protocol_step4_LDADD = $(LDADD)
tutorial_protocol_step4_DEPENDENCIES = libdill.la
tutorial_protocol_step5_SOURCES = tutorial/protocol/step5.c
tutorial_protocol_step5_OBJECTS = tutorial/protocol/step5.$(OBJEXT)
tutorial_protocol_step5_LDADD = $(LDADD)
tutorial_protocol_step5_DEPENDENCIES = libdill.la
tutorial_protocol_step6_SOURCES = tutorial/protocol/step6.c
tutorial_protocol_step6_OBJECTS = tutorial/protocol/step6.$(OBJEXT)
tutorial_protocol_step6_LDADD = $(LDADD)
tutorial_protocol_step6_DEPENDENCIES = libdill.la
tutorial_protocol_step7_SOURCES = tutorial/protocol/step7.c
tutorial_protocol_step7_OBJECTS = tutorial/protocol/step7.$(OBJEXT)
tutorial_protocol_step7_LDADD = $(LDADD)
tutorial_protocol_step7_DEPENDENCIES = libdill.la
tutorial_protocol_step8_SOURCES = tutorial/protocol/step8.c
tutorial_protocol_step8_OBJECTS = tutorial/protocol/step8.$(OBJEXT)
tutorial_protocol_step8_LDADD = $(LDADD)
tutorial_protocol_step8_DEPENDENCIES = libdill.la
tutorial_protocol_step9_SOURCES = tutorial/protocol/step9.c
tutorial_protocol_step9_OBJECTS = tutorial/protocol/step9.$(OBJEXT)
tutorial_protocol_step9_LDADD = $(LDADD)
tutorial_protocol_step9_DEPENDENCIES = libdill.la
tutorial_sockets_step1_SOURCES = tutorial/sockets/step1.c
tutorial_sockets_step1_OBJECTS = tutorial/sockets/step1.$(OBJEXT)
tutorial_sockets_step1_LDADD = $(LDADD)
tutorial_sockets_step1_DEPENDENCIES = libdill.la
tutorial_sockets_step2_SOURCES = tutorial/sockets/step2.c
tutorial_sockets_step2_OBJECTS = tutorial/sockets/step2.$(OBJEXT)
tutorial_sockets_step2_LDADD = $(LDADD)
tutorial_sockets_step2_DEPENDENCIES = libdill.la
tutorial_sockets_step3_SOURCES = tutorial/sockets/step3.c
tutorial_sockets_step3_OBJECTS = tutorial/sockets/step3.$(OBJEXT)
tutorial_sockets_step3_LDADD = $(LDADD)
tutorial_sockets_step3_DEPENDENCIES = libdill.la
tutorial_sockets_step4_SOURCES = tutorial/sockets/step4.c
tutorial_sockets_step4_OBJECTS = tutorial/sockets/step4.$(OBJEXT)
tutorial_sockets_step4_LDADD = $(LDADD)
tutorial_sockets_step4_DEPENDENCIES = libdill.la
tutorial_sockets_step5_SOURCES = tutorial/sockets/step5.c
tutorial_sockets_step5_OBJECTS = tutorial/sockets/step5.$(OBJEXT)
tutorial_sockets_step5_LDADD = $(LDADD)
tutorial_sockets_step5_DEPENDENCIES = libdill.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libdill_la_SOURCES) examples/socks5proxy.c \
	examples/webapp.c perf/chan.c perf/choose.c perf/ctxswitch.c \
	perf/done.c perf/go.c perf/timer.c perf/whispers.c \
	tests/bundle.c tests/chan.c tests/choose.c tests/example.c \
	tests/fd.c tests/go1.c tests/go2.c tests/go3.c tests/go4.c \
	tests/go5.c tests/handle.c tests/happyeyeballs.c tests/http.c \
	tests/iol.c tests/ipaddr.c tests/ipc.c tests/overload.c \
	tests/prefix.c tests/rbtree.c tests/signals.c tests/sleep.c \
	tests/socks5.c tests/suffix.c tests/tcp.c tests/term.c \
	tests/threads.c tests/threads2.c tests/tls.c tests/udp.c \
	tests/ws.c tutorial/basics/step1.c tutorial/basics/step2.c \
	tutorial/basics/step3.c tutorial/basics/step4.c \
	tutorial/basics/step5.c tutorial/basics/step6.c \
	tutorial/protocol/step1.c tutorial/protocol/step2.c \
	tutorial/protocol/step3.c tutorial/protocol/step4.c \
	tutorial/protocol/step5.c tutorial/protocol/step6.c \
	tutorial/protocol/step7.c tutorial/protocol/step8.c \
	tutorial/protocol/step9.c tutorial/sockets/step1.c \
	tutorial/sockets/step2.c tutorial/sockets/step3.c \
	tutorial/sockets/step4.c tutorial/sockets/step5.c
DIST_SOURCES = $(am__libdill_la_SOURCES_DIST) examples/socks5proxy.c \
	examples/webapp.c perf/chan.c perf/choose.c perf/ctxswitch.c \
	perf/done.c perf/go.c perf/timer.c perf/whispers.c \
	tests/bundle.c tests/chan.c tests/choose.c tests/example.c \
	tests/fd.c tests/go1.c tests/go2.c tests/go3.c tests/go4.c \
	tests/go5.c tests/handle.c tests/happyeyeballs.c tests/http.c \
	tests/iol.c tests/ipaddr.c tests/ipc.c tests/overload.c \
	tests/prefix.c tests/rbtree.c tests/signals.c tests/sleep.c \
	tests/socks5.c tests/suffix.c tests/tcp.c tests/term.c \
	tests/threads.c tests/threads2.c tests/tls.c tests/udp.c \
	tests/ws.c tutorial/basics/step1.c tutorial/basics/step2.c \
	tutorial/basics/step3.c tutorial/basics/step4.c \
	tutorial/basics/step5.c tutorial/basics/step6.c \
	tutorial/protocol/step1.c tutorial/protocol/step2.c \
	tutorial/protocol/step3.c tutorial/protocol/step4.c \
	tutorial/protocol/step5.c tutorial/protocol/step6.c \
	tutorial/protocol/step7.c tutorial/protocol/step8.c \
	tutorial/protocol/step9.c tutorial/sockets/step1.c \
	tutorial/sockets/step2.c tutorial/sockets/step3.c \
	tutorial/sockets/step4.c tutorial/sockets/step5.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(dillinclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/libdill.pc.in \
	AUTHORS COPYING compile config.guess config.sub depcomp \
	install-sh ltmain.sh missing test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DILL_ABI_VERSION = @DILL_ABI_VERSION@
DILL_LIBTOOL_VERSION = @DILL_LIBTOOL_VERSION@
DILL_PACKAGE_VERSION = @DILL_PACKAGE_VERSION@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4

################################################################################
#  libdill library                                                             #
################################################################################
dillincludedir = $(includedir)
dillinclude_HEADERS = libdill.h libdillimpl.h
lib_LTLIBRARIES = libdill.la
libdill_la_SOURCES = chan.c cr.h cr.c epoll.h.inc epoll.c.inc handle.h \
	handle.c kqueue.h.inc kqueue.c.inc libdill.c list.h now.h \
	now.c poll.h.inc poll.c.inc pollset.h pollset.c qlist.h \
	rbtree.h rbtree.c slist.h stack.h stack.c ctx.h ctx.c utils.h \
	utils.c $(am__append_1) $(am__append_2)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libdill.pc
libdill_la_LDFLAGS = \
    -no-undefined -version-info @DILL_LIBTOOL_VERSION@ @PTHREAD_LIBS@


# Turn the source fortification in glibc off - otherwise it would panic
# because of the stack pointer black magic in 'go' macro.
libdill_la_CFLAGS = \
    @PTHREAD_CFLAGS@ \
    -fvisibility=hidden\
    -DDILL_EXPORTS \
    -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0

check_HEADERS = \
    tests/assert.h

LDADD = libdill.la
TESTS = $(check_PROGRAMS)

################################################################################
#  manpage documentation generation                                            #
################################################################################
SUBDIRS = man
EXTRA_DIST = \
    ./abi_version.sh \
    ./package_version.sh

CLEANFILES = *.gcno *.gcda dns/*.gcno dns/*.gcda tests/*.gcno tests/*.gcda
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
libdill.pc: $(top_builddir)/config.status $(srcdir)/libdill.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
dns/$(am__dirstamp):
	@$(MKDIR_P) dns
	@: > dns/$(am__dirstamp)
dns/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dns/$(DEPDIR)
	@: > dns/$(DEPDIR)/$(am__dirstamp)
dns/libdill_la-dns.lo: dns/$(am__dirstamp) \
	dns/$(DEPDIR)/$(am__dirstamp)

libdill.la: $(libdill_la_OBJECTS) $(libdill_la_DEPENDENCIES) $(EXTRA_libdill_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdill_la_LINK) -rpath $(libdir) $(libdill_la_OBJECTS) $(libdill_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
examples/$(am__dirstamp):
	@$(MKDIR_P) examples
	@: > examples/$(am__dirstamp)
examples/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/$(DEPDIR)
	@: > examples/$(DEPDIR)/$(am__dirstamp)
examples/socks5proxy.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

examples/socks5proxy$(EXEEXT): $(examples_socks5proxy_OBJECTS) $(examples_socks5proxy_DEPENDENCIES) $(EXTRA_examples_socks5proxy_DEPENDENCIES) examples/$(am__dirstamp)
	@rm -f examples/socks5proxy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_socks5proxy_OBJECTS) $(examples_socks5proxy_LDADD) $(LIBS)
examples/webapp.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

examples/webapp$(EXEEXT): $(examples_webapp_OBJECTS) $(examples_webapp_DEPENDENCIES) $(EXTRA_examples_webapp_DEPENDENCIES) examples/$(am__dirstamp)
	@rm -f examples/webapp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_webapp_OBJECTS) $(examples_webapp_LDADD) $(LIBS)
perf/$(am__dirstamp):
	@$(MKDIR_P) perf
	@: > perf/$(am__dirstamp)
perf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) perf/$(DEPDIR)
	@: > perf/$(DEPDIR)/$(am__dirstamp)
perf/chan.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/chan$(EXEEXT): $(perf_chan_OBJECTS) $(perf_chan_DEPENDENCIES) $(EXTRA_perf_chan_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/chan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_chan_OBJECTS) $(perf_chan_LDADD) $(LIBS)
perf/choose.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/choose$(EXEEXT): $(perf_choose_OBJECTS) $(perf_choose_DEPENDENCIES) $(EXTRA_perf_choose_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/choose$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_choose_OBJECTS) $(perf_choose_LDADD) $(LIBS)
perf/ctxswitch.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/ctxswitch$(EXEEXT): $(perf_ctxswitch_OBJECTS) $(perf_ctxswitch_DEPENDENCIES) $(EXTRA_perf_ctxswitch_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/ctxswitch$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_ctxswitch_OBJECTS) $(perf_ctxswitch_LDADD) $(LIBS)
perf/done.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/done$(EXEEXT): $(perf_done_OBJECTS) $(perf_done_DEPENDENCIES) $(EXTRA_perf_done_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/done$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_done_OBJECTS) $(perf_done_LDADD) $(LIBS)
perf/go.$(OBJEXT): perf/$(am__dirstamp) perf/$(DEPDIR)/$(am__dirstamp)

perf/go$(EXEEXT): $(perf_go_OBJECTS) $(perf_go_DEPENDENCIES) $(EXTRA_perf_go_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/go$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_go_OBJECTS) $(perf_go_LDADD) $(LIBS)
perf/timer.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/timer$(EXEEXT): $(perf_timer_OBJECTS) $(perf_timer_DEPENDENCIES) $(EXTRA_perf_timer_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/timer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_timer_OBJECTS) $(perf_timer_LDADD) $(LIBS)
perf/whispers.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)

perf/whispers$(EXEEXT): $(perf_whispers_OBJECTS) $(perf_whispers_DEPENDENCIES) $(EXTRA_perf_whispers_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/whispers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_whispers_OBJECTS) $(perf_whispers_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/bundle.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/bundle$(EXEEXT): $(tests_bundle_OBJECTS) $(tests_bundle_DEPENDENCIES) $(EXTRA_tests_bundle_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/bundle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_bundle_OBJECTS) $(tests_bundle_LDADD) $(LIBS)
tests/chan.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/chan$(EXEEXT): $(tests_chan_OBJECTS) $(tests_chan_DEPENDENCIES) $(EXTRA_tests_chan_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/chan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_chan_OBJECTS) $(tests_chan_LDADD) $(LIBS)
tests/choose.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/choose$(EXEEXT): $(tests_choose_OBJECTS) $(tests_choose_DEPENDENCIES) $(EXTRA_tests_choose_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/choose$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_choose_OBJECTS) $(tests_choose_LDADD) $(LIBS)
tests/example.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/example$(EXEEXT): $(tests_example_OBJECTS) $(tests_example_DEPENDENCIES) $(EXTRA_tests_example_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_example_OBJECTS) $(tests_example_LDADD) $(LIBS)
tests/fd.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/fd$(EXEEXT): $(tests_fd_OBJECTS) $(tests_fd_DEPENDENCIES) $(EXTRA_tests_fd_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/fd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_fd_OBJECTS) $(tests_fd_LDADD) $(LIBS)
tests/go1.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/go1$(EXEEXT): $(tests_go1_OBJECTS) $(tests_go1_DEPENDENCIES) $(EXTRA_tests_go1_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/go1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_go1_OBJECTS) $(tests_go1_LDADD) $(LIBS)
tests/go2.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/go2$(EXEEXT): $(tests_go2_OBJECTS) $(tests_go2_DEPENDENCIES) $(EXTRA_tests_go2_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/go2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_go2_OBJECTS) $(tests_go2_LDADD) $(LIBS)
tests/go3.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/go3$(EXEEXT): $(tests_go3_OBJECTS) $(tests_go3_DEPENDENCIES) $(EXTRA_tests_go3_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/go3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_go3_OBJECTS) $(tests_go3_LDADD) $(LIBS)
tests/go4.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/go4$(EXEEXT): $(tests_go4_OBJECTS) $(tests_go4_DEPENDENCIES) $(EXTRA_tests_go4_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/go4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_go4_OBJECTS) $(tests_go4_LDADD) $(LIBS)
tests/go5.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/go5$(EXEEXT): $(tests_go5_OBJECTS) $(tests_go5_DEPENDENCIES) $(EXTRA_tests_go5_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/go5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_go5_OBJECTS) $(tests_go5_LDADD) $(LIBS)
tests/handle.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/handle$(EXEEXT): $(tests_handle_OBJECTS) $(tests_handle_DEPENDENCIES) $(EXTRA_tests_handle_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/handle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_handle_OBJECTS) $(tests_handle_LDADD) $(LIBS)
tests/happyeyeballs.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/happyeyeballs$(EXEEXT): $(tests_happyeyeballs_OBJECTS) $(tests_happyeyeballs_DEPENDENCIES) $(EXTRA_tests_happyeyeballs_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/happyeyeballs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_happyeyeballs_OBJECTS) $(tests_happyeyeballs_LDADD) $(LIBS)
tests/http.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/http$(EXEEXT): $(tests_http_OBJECTS) $(tests_http_DEPENDENCIES) $(EXTRA_tests_http_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/http$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_http_OBJECTS) $(tests_http_LDADD) $(LIBS)
tests/iol.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/iol$(EXEEXT): $(tests_iol_OBJECTS) $(tests_iol_DEPENDENCIES) $(EXTRA_tests_iol_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/iol$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_iol_OBJECTS) $(tests_iol_LDADD) $(LIBS)
tests/ipaddr.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/ipaddr$(EXEEXT): $(tests_ipaddr_OBJECTS) $(tests_ipaddr_DEPENDENCIES) $(EXTRA_tests_ipaddr_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipaddr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipaddr_OBJECTS) $(tests_ipaddr_LDADD) $(LIBS)
tests/ipc.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/ipc$(EXEEXT): $(tests_ipc_OBJECTS) $(tests_ipc_DEPENDENCIES) $(EXTRA_tests_ipc_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipc_OBJECTS) $(tests_ipc_LDADD) $(LIBS)
tests/overload.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/overload$(EXEEXT): $(tests_overload_OBJECTS) $(tests_overload_DEPENDENCIES) $(EXTRA_tests_overload_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/overload$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_overload_OBJECTS) $(tests_overload_LDADD) $(LIBS)
tests/prefix.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/prefix$(EXEEXT): $(tests_prefix_OBJECTS) $(tests_prefix_DEPENDENCIES) $(EXTRA_tests_prefix_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/prefix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_prefix_OBJECTS) $(tests_prefix_LDADD) $(LIBS)
tests/rbtree.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/rbtree$(EXEEXT): $(tests_rbtree_OBJECTS) $(tests_rbtree_DEPENDENCIES) $(EXTRA_tests_rbtree_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/rbtree$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_rbtree_OBJECTS) $(tests_rbtree_LDADD) $(LIBS)
tests/signals.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/signals$(EXEEXT): $(tests_signals_OBJECTS) $(tests_signals_DEPENDENCIES) $(EXTRA_tests_signals_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/signals$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_signals_OBJECTS) $(tests_signals_LDADD) $(LIBS)
tests/sleep.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/sleep$(EXEEXT): $(tests_sleep_OBJECTS) $(tests_sleep_DEPENDENCIES) $(EXTRA_tests_sleep_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/sleep$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_sleep_OBJECTS) $(tests_sleep_LDADD) $(LIBS)
tests/socks5.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/socks5$(EXEEXT): $(tests_socks5_OBJECTS) $(tests_socks5_DEPENDENCIES) $(EXTRA_tests_socks5_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/socks5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_socks5_OBJECTS) $(tests_socks5_LDADD) $(LIBS)
tests/suffix.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/suffix$(EXEEXT): $(tests_suffix_OBJECTS) $(tests_suffix_DEPENDENCIES) $(EXTRA_tests_suffix_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/suffix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_suffix_OBJECTS) $(tests_suffix_LDADD) $(LIBS)
tests/tcp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/tcp$(EXEEXT): $(tests_tcp_OBJECTS) $(tests_tcp_DEPENDENCIES) $(EXTRA_tests_tcp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/tcp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_tcp_OBJECTS) $(tests_tcp_LDADD) $(LIBS)
tests/term.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/term$(EXEEXT): $(tests_term_OBJECTS) $(tests_term_DEPENDENCIES) $(EXTRA_tests_term_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/term$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_term_OBJECTS) $(tests_term_LDADD) $(LIBS)
tests/threads.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/threads$(EXEEXT): $(tests_threads_OBJECTS) $(tests_threads_DEPENDENCIES) $(EXTRA_tests_threads_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/threads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_threads_OBJECTS) $(tests_threads_LDADD) $(LIBS)
tests/threads2.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/threads2$(EXEEXT): $(tests_threads2_OBJECTS) $(tests_threads2_DEPENDENCIES) $(EXTRA_tests_threads2_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/threads2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_threads2_OBJECTS) $(tests_threads2_LDADD) $(LIBS)
tests/tls.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/tls$(EXEEXT): $(tests_tls_OBJECTS) $(tests_tls_DEPENDENCIES) $(EXTRA_tests_tls_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/tls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_tls_OBJECTS) $(tests_tls_LDADD) $(LIBS)
tests/udp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/udp$(EXEEXT): $(tests_udp_OBJECTS) $(tests_udp_DEPENDENCIES) $(EXTRA_tests_udp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/udp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_udp_OBJECTS) $(tests_udp_LDADD) $(LIBS)
tests/ws.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/ws$(EXEEXT): $(tests_ws_OBJECTS) $(tests_ws_DEPENDENCIES) $(EXTRA_tests_ws_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ws$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ws_OBJECTS) $(tests_ws_LDADD) $(LIBS)
tutorial/basics/$(am__dirstamp):
	@$(MKDIR_P) tutorial/basics
	@: > tutorial/basics/$(am__dirstamp)
tutorial/basics/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tutorial/basics/$(DEPDIR)
	@: > tutorial/basics/$(DEPDIR)/$(am__dirstamp)
tutorial/basics/step1.$(OBJEXT): tutorial/basics/$(am__dirstamp) \
	tutorial/basics/$(DEPDIR)/$(am__dirstamp)

tutorial/basics/step1$(EXEEXT): $(tutorial_basics_step1_OBJECTS) $(tutorial_basics_step1_DEPENDENCIES) $(EXTRA_tutorial_basics_step1_DEPENDENCIES) tutorial/basics/$(am__dirstamp)
	@rm -f tutorial/basics/step1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_basics_step1_OBJECTS) $(tutorial_basics_step1_LDADD) $(LIBS)
tutorial/basics/step2.$(OBJEXT): tutorial/basics/$(am__dirstamp) \
	tutorial/basics/$(DEPDIR)/$(am__dirstamp)

tutorial/basics/step2$(EXEEXT): $(tutorial_basics_step2_OBJECTS) $(tutorial_basics_step2_DEPENDENCIES) $(EXTRA_tutorial_basics_step2_DEPENDENCIES) tutorial/basics/$(am__dirstamp)
	@rm -f tutorial/basics/step2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_basics_step2_OBJECTS) $(tutorial_basics_step2_LDADD) $(LIBS)
tutorial/basics/step3.$(OBJEXT): tutorial/basics/$(am__dirstamp) \
	tutorial/basics/$(DEPDIR)/$(am__dirstamp)

tutorial/basics/step3$(EXEEXT): $(tutorial_basics_step3_OBJECTS) $(tutorial_basics_step3_DEPENDENCIES) $(EXTRA_tutorial_basics_step3_DEPENDENCIES) tutorial/basics/$(am__dirstamp)
	@rm -f tutorial/basics/step3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_basics_step3_OBJECTS) $(tutorial_basics_step3_LDADD) $(LIBS)
tutorial/basics/step4.$(OBJEXT): tutorial/basics/$(am__dirstamp) \
	tutorial/basics/$(DEPDIR)/$(am__dirstamp)

tutorial/basics/step4$(EXEEXT): $(tutorial_basics_step4_OBJECTS) $(tutorial_basics_step4_DEPENDENCIES) $(EXTRA_tutorial_basics_step4_DEPENDENCIES) tutorial/basics/$(am__dirstamp)
	@rm -f tutorial/basics/step4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_basics_step4_OBJECTS) $(tutorial_basics_step4_LDADD) $(LIBS)
tutorial/basics/step5.$(OBJEXT): tutorial/basics/$(am__dirstamp) \
	tutorial/basics/$(DEPDIR)/$(am__dirstamp)

tutorial/basics/step5$(EXEEXT): $(tutorial_basics_step5_OBJECTS) $(tutorial_basics_step5_DEPENDENCIES) $(EXTRA_tutorial_basics_step5_DEPENDENCIES) tutorial/basics/$(am__dirstamp)
	@rm -f tutorial/basics/step5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_basics_step5_OBJECTS) $(tutorial_basics_step5_LDADD) $(LIBS)
tutorial/basics/step6.$(OBJEXT): tutorial/basics/$(am__dirstamp) \
	tutorial/basics/$(DEPDIR)/$(am__dirstamp)

tutorial/basics/step6$(EXEEXT): $(tutorial_basics_step6_OBJECTS) $(tutorial_basics_step6_DEPENDENCIES) $(EXTRA_tutorial_basics_step6_DEPENDENCIES) tutorial/basics/$(am__dirstamp)
	@rm -f tutorial/basics/step6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_basics_step6_OBJECTS) $(tutorial_basics_step6_LDADD) $(LIBS)
tutorial/protocol/$(am__dirstamp):
	@$(MKDIR_P) tutorial/protocol
	@: > tutorial/protocol/$(am__dirstamp)
tutorial/protocol/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tutorial/protocol/$(DEPDIR)
	@: > tutorial/protocol/$(DEPDIR)/$(am__dirstamp)
tutorial/protocol/step1.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step1$(EXEEXT): $(tutorial_protocol_step1_OBJECTS) $(tutorial_protocol_step1_DEPENDENCIES) $(EXTRA_tutorial_protocol_step1_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step1_OBJECTS) $(tutorial_protocol_step1_LDADD) $(LIBS)
tutorial/protocol/step2.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step2$(EXEEXT): $(tutorial_protocol_step2_OBJECTS) $(tutorial_protocol_step2_DEPENDENCIES) $(EXTRA_tutorial_protocol_step2_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step2_OBJECTS) $(tutorial_protocol_step2_LDADD) $(LIBS)
tutorial/protocol/step3.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step3$(EXEEXT): $(tutorial_protocol_step3_OBJECTS) $(tutorial_protocol_step3_DEPENDENCIES) $(EXTRA_tutorial_protocol_step3_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step3_OBJECTS) $(tutorial_protocol_step3_LDADD) $(LIBS)
tutorial/protocol/step4.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step4$(EXEEXT): $(tutorial_protocol_step4_OBJECTS) $(tutorial_protocol_step4_DEPENDENCIES) $(EXTRA_tutorial_protocol_step4_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step4_OBJECTS) $(tutorial_protocol_step4_LDADD) $(LIBS)
tutorial/protocol/step5.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step5$(EXEEXT): $(tutorial_protocol_step5_OBJECTS) $(tutorial_protocol_step5_DEPENDENCIES) $(EXTRA_tutorial_protocol_step5_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step5_OBJECTS) $(tutorial_protocol_step5_LDADD) $(LIBS)
tutorial/protocol/step6.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step6$(EXEEXT): $(tutorial_protocol_step6_OBJECTS) $(tutorial_protocol_step6_DEPENDENCIES) $(EXTRA_tutorial_protocol_step6_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step6_OBJECTS) $(tutorial_protocol_step6_LDADD) $(LIBS)
tutorial/protocol/step7.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step7$(EXEEXT): $(tutorial_protocol_step7_OBJECTS) $(tutorial_protocol_step7_DEPENDENCIES) $(EXTRA_tutorial_protocol_step7_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step7_OBJECTS) $(tutorial_protocol_step7_LDADD) $(LIBS)
tutorial/protocol/step8.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step8$(EXEEXT): $(tutorial_protocol_step8_OBJECTS) $(tutorial_protocol_step8_DEPENDENCIES) $(EXTRA_tutorial_protocol_step8_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step8_OBJECTS) $(tutorial_protocol_step8_LDADD) $(LIBS)
tutorial/protocol/step9.$(OBJEXT): tutorial/protocol/$(am__dirstamp) \
	tutorial/protocol/$(DEPDIR)/$(am__dirstamp)

tutorial/protocol/step9$(EXEEXT): $(tutorial_protocol_step9_OBJECTS) $(tutorial_protocol_step9_DEPENDENCIES) $(EXTRA_tutorial_protocol_step9_DEPENDENCIES) tutorial/protocol/$(am__dirstamp)
	@rm -f tutorial/protocol/step9$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_protocol_step9_OBJECTS) $(tutorial_protocol_step9_LDADD) $(LIBS)
tutorial/sockets/$(am__dirstamp):
	@$(MKDIR_P) tutorial/sockets
	@: > tutorial/sockets/$(am__dirstamp)
tutorial/sockets/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tutorial/sockets/$(DEPDIR)
	@: > tutorial/sockets/$(DEPDIR)/$(am__dirstamp)
tutorial/sockets/step1.$(OBJEXT): tutorial/sockets/$(am__dirstamp) \
	tutorial/sockets/$(DEPDIR)/$(am__dirstamp)

tutorial/sockets/step1$(EXEEXT): $(tutorial_sockets_step1_OBJECTS) $(tutorial_sockets_step1_DEPENDENCIES) $(EXTRA_tutorial_sockets_step1_DEPENDENCIES) tutorial/sockets/$(am__dirstamp)
	@rm -f tutorial/sockets/step1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_sockets_step1_OBJECTS) $(tutorial_sockets_step1_LDADD) $(LIBS)
tutorial/sockets/step2.$(OBJEXT): tutorial/sockets/$(am__dirstamp) \
	tutorial/sockets/$(DEPDIR)/$(am__dirstamp)

tutorial/sockets/step2$(EXEEXT): $(tutorial_sockets_step2_OBJECTS) $(tutorial_sockets_step2_DEPENDENCIES) $(EXTRA_tutorial_sockets_step2_DEPENDENCIES) tutorial/sockets/$(am__dirstamp)
	@rm -f tutorial/sockets/step2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_sockets_step2_OBJECTS) $(tutorial_sockets_step2_LDADD) $(LIBS)
tutorial/sockets/step3.$(OBJEXT): tutorial/sockets/$(am__dirstamp) \
	tutorial/sockets/$(DEPDIR)/$(am__dirstamp)

tutorial/sockets/step3$(EXEEXT): $(tutorial_sockets_step3_OBJECTS) $(tutorial_sockets_step3_DEPENDENCIES) $(EXTRA_tutorial_sockets_step3_DEPENDENCIES) tutorial/sockets/$(am__dirstamp)
	@rm -f tutorial/sockets/step3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_sockets_step3_OBJECTS) $(tutorial_sockets_step3_LDADD) $(LIBS)
tutorial/sockets/step4.$(OBJEXT): tutorial/sockets/$(am__dirstamp) \
	tutorial/sockets/$(DEPDIR)/$(am__dirstamp)

tutorial/sockets/step4$(EXEEXT): $(tutorial_sockets_step4_OBJECTS) $(tutorial_sockets_step4_DEPENDENCIES) $(EXTRA_tutorial_sockets_step4_DEPENDENCIES) tutorial/sockets/$(am__dirstamp)
	@rm -f tutorial/sockets/step4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_sockets_step4_OBJECTS) $(tutorial_sockets_step4_LDADD) $(LIBS)
tutorial/sockets/step5.$(OBJEXT): tutorial/sockets/$(am__dirstamp) \
	tutorial/sockets/$(DEPDIR)/$(am__dirstamp)

tutorial/sockets/step5$(EXEEXT): $(tutorial_sockets_step5_OBJECTS) $(tutorial_sockets_step5_DEPENDENCIES) $(EXTRA_tutorial_sockets_step5_DEPENDENCIES) tutorial/sockets/$(am__dirstamp)
	@rm -f tutorial/sockets/step5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tutorial_sockets_step5_OBJECTS) $(tutorial_sockets_step5_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f dns/*.$(OBJEXT)
	-rm -f dns/*.lo
	-rm -f examples/*.$(OBJEXT)
	-rm -f perf/*.$(OBJEXT)
	-rm -f tests/*.$(OBJEXT)
	-rm -f tutorial/basics/*.$(OBJEXT)
	-rm -f tutorial/protocol/*.$(OBJEXT)
	-rm -f tutorial/sockets/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-bsock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-chan.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-cr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-ctx.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-fd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-handle.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-happyeyeballs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-http.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-iol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-ipaddr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-ipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-libdill.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-msock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-now.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-pollset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-prefix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-rbtree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-socks5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-stack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-suffix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-tcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-term.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-tls.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-udp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdill_la-ws.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dns/$(DEPDIR)/libdill_la-dns.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@examples/$(DEPDIR)/socks5proxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@examples/$(DEPDIR)/webapp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/chan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/choose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/ctxswitch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/done.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/go.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/whispers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/bundle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/chan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/choose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/fd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/go1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/go2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/go3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/go4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/go5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/handle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/happyeyeballs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/http.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/iol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipaddr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/overload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/prefix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/rbtree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/signals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/sleep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/socks5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/suffix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/tcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/term.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/threads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/threads2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/tls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/udp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ws.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/basics/$(DEPDIR)/step1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/basics/$(DEPDIR)/step2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/basics/$(DEPDIR)/step3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/basics/$(DEPDIR)/step4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/basics/$(DEPDIR)/step5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/basics/$(DEPDIR)/step6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step7.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/protocol/$(DEPDIR)/step9.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/sockets/$(DEPDIR)/step1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/sockets/$(DEPDIR)/step2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/sockets/$(DEPDIR)/step3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/sockets/$(DEPDIR)/step4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tutorial/sockets/$(DEPDIR)/step5.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libdill_la-chan.lo: chan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-chan.lo -MD -MP -MF $(DEPDIR)/libdill_la-chan.Tpo -c -o libdill_la-chan.lo `test -f 'chan.c' || echo '$(srcdir)/'`chan.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-chan.Tpo $(DEPDIR)/libdill_la-chan.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='chan.c' object='libdill_la-chan.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-chan.lo `test -f 'chan.c' || echo '$(srcdir)/'`chan.c

libdill_la-cr.lo: cr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-cr.lo -MD -MP -MF $(DEPDIR)/libdill_la-cr.Tpo -c -o libdill_la-cr.lo `test -f 'cr.c' || echo '$(srcdir)/'`cr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-cr.Tpo $(DEPDIR)/libdill_la-cr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cr.c' object='libdill_la-cr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-cr.lo `test -f 'cr.c' || echo '$(srcdir)/'`cr.c

libdill_la-handle.lo: handle.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-handle.lo -MD -MP -MF $(DEPDIR)/libdill_la-handle.Tpo -c -o libdill_la-handle.lo `test -f 'handle.c' || echo '$(srcdir)/'`handle.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-handle.Tpo $(DEPDIR)/libdill_la-handle.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='handle.c' object='libdill_la-handle.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-handle.lo `test -f 'handle.c' || echo '$(srcdir)/'`handle.c

libdill_la-libdill.lo: libdill.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-libdill.lo -MD -MP -MF $(DEPDIR)/libdill_la-libdill.Tpo -c -o libdill_la-libdill.lo `test -f 'libdill.c' || echo '$(srcdir)/'`libdill.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-libdill.Tpo $(DEPDIR)/libdill_la-libdill.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libdill.c' object='libdill_la-libdill.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-libdill.lo `test -f 'libdill.c' || echo '$(srcdir)/'`libdill.c

libdill_la-now.lo: now.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-now.lo -MD -MP -MF $(DEPDIR)/libdill_la-now.Tpo -c -o libdill_la-now.lo `test -f 'now.c' || echo '$(srcdir)/'`now.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-now.Tpo $(DEPDIR)/libdill_la-now.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='now.c' object='libdill_la-now.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-now.lo `test -f 'now.c' || echo '$(srcdir)/'`now.c

libdill_la-pollset.lo: pollset.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-pollset.lo -MD -MP -MF $(DEPDIR)/libdill_la-pollset.Tpo -c -o libdill_la-pollset.lo `test -f 'pollset.c' || echo '$(srcdir)/'`pollset.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-pollset.Tpo $(DEPDIR)/libdill_la-pollset.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pollset.c' object='libdill_la-pollset.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-pollset.lo `test -f 'pollset.c' || echo '$(srcdir)/'`pollset.c

libdill_la-rbtree.lo: rbtree.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-rbtree.lo -MD -MP -MF $(DEPDIR)/libdill_la-rbtree.Tpo -c -o libdill_la-rbtree.lo `test -f 'rbtree.c' || echo '$(srcdir)/'`rbtree.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-rbtree.Tpo $(DEPDIR)/libdill_la-rbtree.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rbtree.c' object='libdill_la-rbtree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-rbtree.lo `test -f 'rbtree.c' || echo '$(srcdir)/'`rbtree.c

libdill_la-stack.lo: stack.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-stack.lo -MD -MP -MF $(DEPDIR)/libdill_la-stack.Tpo -c -o libdill_la-stack.lo `test -f 'stack.c' || echo '$(srcdir)/'`stack.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-stack.Tpo $(DEPDIR)/libdill_la-stack.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='stack.c' object='libdill_la-stack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-stack.lo `test -f 'stack.c' || echo '$(srcdir)/'`stack.c

libdill_la-ctx.lo: ctx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-ctx.lo -MD -MP -MF $(DEPDIR)/libdill_la-ctx.Tpo -c -o libdill_la-ctx.lo `test -f 'ctx.c' || echo '$(srcdir)/'`ctx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-ctx.Tpo $(DEPDIR)/libdill_la-ctx.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ctx.c' object='libdill_la-ctx.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-ctx.lo `test -f 'ctx.c' || echo '$(srcdir)/'`ctx.c

libdill_la-utils.lo: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-utils.lo -MD -MP -MF $(DEPDIR)/libdill_la-utils.Tpo -c -o libdill_la-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-utils.Tpo $(DEPDIR)/libdill_la-utils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='libdill_la-utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

libdill_la-bsock.lo: bsock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-bsock.lo -MD -MP -MF $(DEPDIR)/libdill_la-bsock.Tpo -c -o libdill_la-bsock.lo `test -f 'bsock.c' || echo '$(srcdir)/'`bsock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-bsock.Tpo $(DEPDIR)/libdill_la-bsock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bsock.c' object='libdill_la-bsock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-bsock.lo `test -f 'bsock.c' || echo '$(srcdir)/'`bsock.c

libdill_la-fd.lo: fd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-fd.lo -MD -MP -MF $(DEPDIR)/libdill_la-fd.Tpo -c -o libdill_la-fd.lo `test -f 'fd.c' || echo '$(srcdir)/'`fd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-fd.Tpo $(DEPDIR)/libdill_la-fd.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='fd.c' object='libdill_la-fd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-fd.lo `test -f 'fd.c' || echo '$(srcdir)/'`fd.c

libdill_la-happyeyeballs.lo: happyeyeballs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-happyeyeballs.lo -MD -MP -MF $(DEPDIR)/libdill_la-happyeyeballs.Tpo -c -o libdill_la-happyeyeballs.lo `test -f 'happyeyeballs.c' || echo '$(srcdir)/'`happyeyeballs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-happyeyeballs.Tpo $(DEPDIR)/libdill_la-happyeyeballs.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='happyeyeballs.c' object='libdill_la-happyeyeballs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-happyeyeballs.lo `test -f 'happyeyeballs.c' || echo '$(srcdir)/'`happyeyeballs.c

libdill_la-http.lo: http.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-http.lo -MD -MP -MF $(DEPDIR)/libdill_la-http.Tpo -c -o libdill_la-http.lo `test -f 'http.c' || echo '$(srcdir)/'`http.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-http.Tpo $(DEPDIR)/libdill_la-http.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='http.c' object='libdill_la-http.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-http.lo `test -f 'http.c' || echo '$(srcdir)/'`http.c

libdill_la-iol.lo: iol.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-iol.lo -MD -MP -MF $(DEPDIR)/libdill_la-iol.Tpo -c -o libdill_la-iol.lo `test -f 'iol.c' || echo '$(srcdir)/'`iol.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-iol.Tpo $(DEPDIR)/libdill_la-iol.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='iol.c' object='libdill_la-iol.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-iol.lo `test -f 'iol.c' || echo '$(srcdir)/'`iol.c

libdill_la-ipc.lo: ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-ipc.lo -MD -MP -MF $(DEPDIR)/libdill_la-ipc.Tpo -c -o libdill_la-ipc.lo `test -f 'ipc.c' || echo '$(srcdir)/'`ipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-ipc.Tpo $(DEPDIR)/libdill_la-ipc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ipc.c' object='libdill_la-ipc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-ipc.lo `test -f 'ipc.c' || echo '$(srcdir)/'`ipc.c

libdill_la-ipaddr.lo: ipaddr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-ipaddr.lo -MD -MP -MF $(DEPDIR)/libdill_la-ipaddr.Tpo -c -o libdill_la-ipaddr.lo `test -f 'ipaddr.c' || echo '$(srcdir)/'`ipaddr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-ipaddr.Tpo $(DEPDIR)/libdill_la-ipaddr.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ipaddr.c' object='libdill_la-ipaddr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-ipaddr.lo `test -f 'ipaddr.c' || echo '$(srcdir)/'`ipaddr.c

libdill_la-msock.lo: msock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-msock.lo -MD -MP -MF $(DEPDIR)/libdill_la-msock.Tpo -c -o libdill_la-msock.lo `test -f 'msock.c' || echo '$(srcdir)/'`msock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-msock.Tpo $(DEPDIR)/libdill_la-msock.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msock.c' object='libdill_la-msock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-msock.lo `test -f 'msock.c' || echo '$(srcdir)/'`msock.c

libdill_la-prefix.lo: prefix.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-prefix.lo -MD -MP -MF $(DEPDIR)/libdill_la-prefix.Tpo -c -o libdill_la-prefix.lo `test -f 'prefix.c' || echo '$(srcdir)/'`prefix.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-prefix.Tpo $(DEPDIR)/libdill_la-prefix.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='prefix.c' object='libdill_la-prefix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-prefix.lo `test -f 'prefix.c' || echo '$(srcdir)/'`prefix.c

libdill_la-socks5.lo: socks5.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-socks5.lo -MD -MP -MF $(DEPDIR)/libdill_la-socks5.Tpo -c -o libdill_la-socks5.lo `test -f 'socks5.c' || echo '$(srcdir)/'`socks5.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-socks5.Tpo $(DEPDIR)/libdill_la-socks5.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='socks5.c' object='libdill_la-socks5.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-socks5.lo `test -f 'socks5.c' || echo '$(srcdir)/'`socks5.c

libdill_la-suffix.lo: suffix.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-suffix.lo -MD -MP -MF $(DEPDIR)/libdill_la-suffix.Tpo -c -o libdill_la-suffix.lo `test -f 'suffix.c' || echo '$(srcdir)/'`suffix.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-suffix.Tpo $(DEPDIR)/libdill_la-suffix.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='suffix.c' object='libdill_la-suffix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-suffix.lo `test -f 'suffix.c' || echo '$(srcdir)/'`suffix.c

libdill_la-tcp.lo: tcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-tcp.lo -MD -MP -MF $(DEPDIR)/libdill_la-tcp.Tpo -c -o libdill_la-tcp.lo `test -f 'tcp.c' || echo '$(srcdir)/'`tcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-tcp.Tpo $(DEPDIR)/libdill_la-tcp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tcp.c' object='libdill_la-tcp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-tcp.lo `test -f 'tcp.c' || echo '$(srcdir)/'`tcp.c

libdill_la-term.lo: term.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-term.lo -MD -MP -MF $(DEPDIR)/libdill_la-term.Tpo -c -o libdill_la-term.lo `test -f 'term.c' || echo '$(srcdir)/'`term.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-term.Tpo $(DEPDIR)/libdill_la-term.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='term.c' object='libdill_la-term.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-term.lo `test -f 'term.c' || echo '$(srcdir)/'`term.c

libdill_la-udp.lo: udp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-udp.lo -MD -MP -MF $(DEPDIR)/libdill_la-udp.Tpo -c -o libdill_la-udp.lo `test -f 'udp.c' || echo '$(srcdir)/'`udp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-udp.Tpo $(DEPDIR)/libdill_la-udp.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='udp.c' object='libdill_la-udp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-udp.lo `test -f 'udp.c' || echo '$(srcdir)/'`udp.c

libdill_la-ws.lo: ws.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-ws.lo -MD -MP -MF $(DEPDIR)/libdill_la-ws.Tpo -c -o libdill_la-ws.lo `test -f 'ws.c' || echo '$(srcdir)/'`ws.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-ws.Tpo $(DEPDIR)/libdill_la-ws.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ws.c' object='libdill_la-ws.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-ws.lo `test -f 'ws.c' || echo '$(srcdir)/'`ws.c

dns/libdill_la-dns.lo: dns/dns.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT dns/libdill_la-dns.lo -MD -MP -MF dns/$(DEPDIR)/libdill_la-dns.Tpo -c -o dns/libdill_la-dns.lo `test -f 'dns/dns.c' || echo '$(srcdir)/'`dns/dns.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dns/$(DEPDIR)/libdill_la-dns.Tpo dns/$(DEPDIR)/libdill_la-dns.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dns/dns.c' object='dns/libdill_la-dns.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o dns/libdill_la-dns.lo `test -f 'dns/dns.c' || echo '$(srcdir)/'`dns/dns.c

libdill_la-tls.lo: tls.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -MT libdill_la-tls.lo -MD -MP -MF $(DEPDIR)/libdill_la-tls.Tpo -c -o libdill_la-tls.lo `test -f 'tls.c' || echo '$(srcdir)/'`tls.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libdill_la-tls.Tpo $(DEPDIR)/libdill_la-tls.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tls.c' object='libdill_la-tls.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdill_la_CFLAGS) $(CFLAGS) -c -o libdill_la-tls.lo `test -f 'tls.c' || echo '$(srcdir)/'`tls.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf dns/.libs dns/_libs
	-rm -rf examples/.libs examples/_libs
	-rm -rf perf/.libs perf/_libs
	-rm -rf tests/.libs tests/_libs
	-rm -rf tutorial/basics/.libs tutorial/basics/_libs
	-rm -rf tutorial/protocol/.libs tutorial/protocol/_libs
	-rm -rf tutorial/sockets/.libs tutorial/sockets/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-dillincludeHEADERS: $(dillinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(dillinclude_HEADERS)'; test -n "$(dillincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dillincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dillincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(dillincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(dillincludedir)" || exit $$?; \
	done

uninstall-dillincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dillinclude_HEADERS)'; test -n "$(dillincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dillincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_HEADERS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/example.log: tests/example$(EXEEXT)
	@p='tests/example$(EXEEXT)'; \
	b='tests/example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/go1.log: tests/go1$(EXEEXT)
	@p='tests/go1$(EXEEXT)'; \
	b='tests/go1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/go2.log: tests/go2$(EXEEXT)
	@p='tests/go2$(EXEEXT)'; \
	b='tests/go2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/go3.log: tests/go3$(EXEEXT)
	@p='tests/go3$(EXEEXT)'; \
	b='tests/go3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/go4.log: tests/go4$(EXEEXT)
	@p='tests/go4$(EXEEXT)'; \
	b='tests/go4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/go5.log: tests/go5$(EXEEXT)
	@p='tests/go5$(EXEEXT)'; \
	b='tests/go5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/fd.log: tests/fd$(EXEEXT)
	@p='tests/fd$(EXEEXT)'; \
	b='tests/fd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/handle.log: tests/handle$(EXEEXT)
	@p='tests/handle$(EXEEXT)'; \
	b='tests/handle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/chan.log: tests/chan$(EXEEXT)
	@p='tests/chan$(EXEEXT)'; \
	b='tests/chan'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/choose.log: tests/choose$(EXEEXT)
	@p='tests/choose$(EXEEXT)'; \
	b='tests/choose'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/sleep.log: tests/sleep$(EXEEXT)
	@p='tests/sleep$(EXEEXT)'; \
	b='tests/sleep'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/signals.log: tests/signals$(EXEEXT)
	@p='tests/signals$(EXEEXT)'; \
	b='tests/signals'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/overload.log: tests/overload$(EXEEXT)
	@p='tests/overload$(EXEEXT)'; \
	b='tests/overload'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/rbtree.log: tests/rbtree$(EXEEXT)
	@p='tests/rbtree$(EXEEXT)'; \
	b='tests/rbtree'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/bundle.log: tests/bundle$(EXEEXT)
	@p='tests/bundle$(EXEEXT)'; \
	b='tests/bundle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/threads.log: tests/threads$(EXEEXT)
	@p='tests/threads$(EXEEXT)'; \
	b='tests/threads'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/threads2.log: tests/threads2$(EXEEXT)
	@p='tests/threads2$(EXEEXT)'; \
	b='tests/threads2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ipaddr.log: tests/ipaddr$(EXEEXT)
	@p='tests/ipaddr$(EXEEXT)'; \
	b='tests/ipaddr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/iol.log: tests/iol$(EXEEXT)
	@p='tests/iol$(EXEEXT)'; \
	b='tests/iol'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tcp.log: tests/tcp$(EXEEXT)
	@p='tests/tcp$(EXEEXT)'; \
	b='tests/tcp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ipc.log: tests/ipc$(EXEEXT)
	@p='tests/ipc$(EXEEXT)'; \
	b='tests/ipc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/prefix.log: tests/prefix$(EXEEXT)
	@p='tests/prefix$(EXEEXT)'; \
	b='tests/prefix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/socks5.log: tests/socks5$(EXEEXT)
	@p='tests/socks5$(EXEEXT)'; \
	b='tests/socks5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/suffix.log: tests/suffix$(EXEEXT)
	@p='tests/suffix$(EXEEXT)'; \
	b='tests/suffix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/udp.log: tests/udp$(EXEEXT)
	@p='tests/udp$(EXEEXT)'; \
	b='tests/udp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/http.log: tests/http$(EXEEXT)
	@p='tests/http$(EXEEXT)'; \
	b='tests/http'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ws.log: tests/ws$(EXEEXT)
	@p='tests/ws$(EXEEXT)'; \
	b='tests/ws'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/term.log: tests/term$(EXEEXT)
	@p='tests/term$(EXEEXT)'; \
	b='tests/term'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/happyeyeballs.log: tests/happyeyeballs$(EXEEXT)
	@p='tests/happyeyeballs$(EXEEXT)'; \
	b='tests/happyeyeballs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/tls.log: tests/tls$(EXEEXT)
	@p='tests/tls$(EXEEXT)'; \
	b='tests/tls'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_HEADERS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(dillincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f dns/$(DEPDIR)/$(am__dirstamp)
	-rm -f dns/$(am__dirstamp)
	-rm -f examples/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/$(am__dirstamp)
	-rm -f perf/$(DEPDIR)/$(am__dirstamp)
	-rm -f perf/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f tutorial/basics/$(DEPDIR)/$(am__dirstamp)
	-rm -f tutorial/basics/$(am__dirstamp)
	-rm -f tutorial/protocol/$(DEPDIR)/$(am__dirstamp)
	-rm -f tutorial/protocol/$(am__dirstamp)
	-rm -f tutorial/sockets/$(DEPDIR)/$(am__dirstamp)
	-rm -f tutorial/sockets/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR) dns/$(DEPDIR) examples/$(DEPDIR) perf/$(DEPDIR) tests/$(DEPDIR) tutorial/basics/$(DEPDIR) tutorial/protocol/$(DEPDIR) tutorial/sockets/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dillincludeHEADERS install-pkgconfigDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR) dns/$(DEPDIR) examples/$(DEPDIR) perf/$(DEPDIR) tests/$(DEPDIR) tutorial/basics/$(DEPDIR) tutorial/protocol/$(DEPDIR) tutorial/sockets/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dillincludeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-cscope clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-hook dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-libtool distclean-local \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dillincludeHEADERS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-dillincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

.PRECIOUS: Makefile


################################################################################
#  additional packaging-related stuff                                          #
################################################################################

#  Generate ChangeLog file from git.
#  Also, there's no git availabe when building from the source package and
#  thus no way to obtain package version. Therefore, package version is
#  saved into a file when building a source package.
dist-hook:
	@if test -d "$(srcdir)/.git"; \
	then \
		echo Creating ChangeLog; \
		cd "$(top_srcdir)"; \
		(echo '# Generated by Makefile. Do not edit.'; echo; \
		  ./missing --run git log --decorate ) > ChangeLog.tmp; \
		mv -f ChangeLog.tmp $(top_distdir)/ChangeLog; \
		rm -f ChangeLog.tmp; \
    else \
        cp -f ChangeLog $(top_distdir)/ChangeLog || \
        echo Failed to generate ChangeLog >&2; \
	fi; \
	$(srcdir)/package_version.sh > $(distdir)/.version

distclean-local:
	-rm -f config.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
